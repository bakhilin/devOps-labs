{"ast":null,"code":"var _jsxFileName = \"/home/nikita/Desktop/devOps-labs/lab5/react-frontend/src/components/root/users/user/accountUser/EditUserProfile.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport Footer from \"../../../fragments/footer/Footer\";\nimport Background from \"../../../fragments/background/Background\";\nimport { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport styles from \"../../../../../css/Forms.module.css\";\nimport style from \"../../../../../css/Footer.module.css\";\nimport { useLocation } from \"react-router-dom\";\nimport UpdateUserDataService from \"../../../../../api/users/UpdateUserDataService\";\nimport LoadingDotsDark from \"../../login/animation/LoadingDotsDark\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst EditUserProfile = () => {\n  _s();\n\n  const navigate = useNavigate();\n  const [loading, setLoading] = useState(false);\n  const location = useLocation();\n  const [checked, setCheckBoxChecked] = useState(\"other\");\n  const [info, setInfo] = useState({\n    id: location.state.id,\n    fullName: location.state.fullName,\n    gender: \"OTHER\",\n    password: \"\",\n    repeatpassword: \"\"\n  });\n  const [errors, setErrors] = useState({});\n\n  const validate = () => {\n    const errors = {};\n\n    if (!info.fullName) {\n      errors.fullName = \"Required\";\n    } else if (info.fullName.length < 2 || info.fullName.length > 20) {\n      errors.fullName = \"2 and 20 char\";\n    }\n\n    if (!info.password) {\n      errors.password = \"Password is required\";\n    }\n\n    if (!info.repeatpassword) {\n      errors.repeatpassword = \"Required\";\n    }\n\n    if (info.password !== info.repeatpassword) {\n      errors.repeatpassword = \"Don't match\";\n    }\n\n    return errors;\n  };\n\n  const submitHandler = async event => {\n    event.preventDefault();\n    const errors = validate(info);\n    setErrors(errors);\n\n    if (Object.keys(errors).length === 0) {\n      setLoading(true);\n      const response = await UpdateUserDataService(info);\n\n      if (response.status === 201) {\n        navigate(\"/account-user\");\n      }\n    } else {\n      setLoading(false);\n      console.log(errors);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"main\", {\n      className: styles.form_style,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Edit account\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        id: \"userInfo\",\n        onSubmit: submitHandler,\n        children: [/*#__PURE__*/_jsxDEV(\"section\", {\n          className: styles.form_field,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            defaultValue: location.state.fullName,\n            type: \"text\",\n            name: \"name\",\n            onChange: e => setInfo({ ...info,\n              fullName: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"name\",\n            className: styles.label_name,\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: styles.content_name,\n              children: \"Full Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 15\n            }, this), errors.fullName && /*#__PURE__*/_jsxDEV(\"small\", {\n              className: styles.errors,\n              children: \"Invalid Full Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n          className: styles.form_field_radio,\n          children: [/*#__PURE__*/_jsxDEV(\"section\", {\n            className: styles.name_section,\n            children: /*#__PURE__*/_jsxDEV(\"label\", {\n              id: \"gender\",\n              className: styles.label_name,\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                className: styles.content_name,\n                children: \"Gender\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 92,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n            className: styles.checkbox_choice_section,\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              onClick: () => setCheckBoxChecked(\"male\"),\n              onChange: e => setInfo({ ...info,\n                gender: \"MALE\"\n              }),\n              checked: checked === \"male\",\n              type: \"checkbox\",\n              id: \"checkbox1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              className: styles.checkbox,\n              htmlFor: \"checkbox1\",\n              children: \"Male\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              onClick: () => setCheckBoxChecked(\"female\"),\n              onChange: e => setInfo({ ...info,\n                gender: \"FEMALE\"\n              }),\n              checked: checked === \"female\",\n              type: \"checkbox\",\n              id: \"checkbox2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              className: styles.checkbox,\n              htmlFor: \"checkbox1\",\n              children: \"Female\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              onClick: () => setCheckBoxChecked(\"other\"),\n              onChange: e => setInfo({ ...info,\n                gender: \"OTHER\"\n              }),\n              checked: checked === \"other\",\n              type: \"checkbox\",\n              id: \"checkbox3\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              className: styles.checkbox,\n              htmlFor: \"checkbox1\",\n              children: \"Other\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n          className: styles.form_field,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"password\",\n            name: \"password\",\n            type: \"password\",\n            onChange: e => setInfo({ ...info,\n              password: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"name\",\n            className: styles.label_name,\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: styles.content_name,\n              children: \"Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 15\n            }, this), errors.password && /*#__PURE__*/_jsxDEV(\"small\", {\n              className: styles.errors,\n              children: \"Invalid password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n          className: styles.form_field,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"repassword\",\n            name: \"repassword\",\n            type: \"password\",\n            onChange: e => setInfo({ ...info,\n              repeatpassword: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"repassword\",\n            className: styles.label_name,\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: styles.content_name,\n              children: \"Confirm Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 15\n            }, this), errors.repeatpassword && /*#__PURE__*/_jsxDEV(\"small\", {\n              className: styles.errors,\n              children: errors.repeatpassword\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"article\", {\n          className: styles.form_field,\n          children: [loading && /*#__PURE__*/_jsxDEV(LoadingDotsDark, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 25\n          }, this), !loading && /*#__PURE__*/_jsxDEV(\"button\", {\n            id: \"button\",\n            type: \"submit\",\n            className: styles.button,\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {\n      class: style.footer\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Background, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(EditUserProfile, \"JhoyoeVAmCDp5j2g4Bv4X7Hka7Q=\", false, function () {\n  return [useNavigate, useLocation];\n});\n\n_c = EditUserProfile;\nexport default EditUserProfile;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditUserProfile\");","map":{"version":3,"sources":["/home/nikita/Desktop/devOps-labs/lab5/react-frontend/src/components/root/users/user/accountUser/EditUserProfile.jsx"],"names":["React","Footer","Background","useState","useNavigate","styles","style","useLocation","UpdateUserDataService","LoadingDotsDark","EditUserProfile","navigate","loading","setLoading","location","checked","setCheckBoxChecked","info","setInfo","id","state","fullName","gender","password","repeatpassword","errors","setErrors","validate","length","submitHandler","event","preventDefault","Object","keys","response","status","console","log","form_style","form_field","e","target","value","label_name","content_name","form_field_radio","name_section","checkbox_choice_section","checkbox","button","footer"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Footer from \"../../../fragments/footer/Footer\";\nimport Background from \"../../../fragments/background/Background\";\nimport { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport styles from \"../../../../../css/Forms.module.css\";\nimport style from \"../../../../../css/Footer.module.css\";\nimport { useLocation } from \"react-router-dom\";\nimport UpdateUserDataService from \"../../../../../api/users/UpdateUserDataService\";\nimport LoadingDotsDark from \"../../login/animation/LoadingDotsDark\";\n\nconst EditUserProfile = () => {\n  const navigate = useNavigate();\n  const [loading, setLoading] = useState(false);\n  const location = useLocation();\n\n  const [checked, setCheckBoxChecked] = useState(\"other\");\n  const [info, setInfo] = useState({\n    id: location.state.id,\n    fullName: location.state.fullName,\n    gender: \"OTHER\",\n    password: \"\",\n    repeatpassword: \"\",\n  });\n\n  const [errors, setErrors] = useState({});\n\n  const validate = () => {\n    const errors = {};\n\n    if (!info.fullName) {\n      errors.fullName = \"Required\";\n    } else if (info.fullName.length < 2 || info.fullName.length > 20) {\n      errors.fullName = \"2 and 20 char\";\n    }\n\n    if (!info.password) {\n      errors.password = \"Password is required\";\n    }\n    if (!info.repeatpassword) {\n      errors.repeatpassword = \"Required\";\n    }\n    if (info.password !== info.repeatpassword) {\n      errors.repeatpassword = \"Don't match\";\n    }\n\n    return errors;\n  };\n\n  const submitHandler = async (event) => {\n    event.preventDefault();\n    const errors = validate(info);\n    setErrors(errors);\n\n    if (Object.keys(errors).length === 0) {\n      setLoading(true);\n      const response = await UpdateUserDataService(info);\n\n      if (response.status === 201) {\n        navigate(\"/account-user\");\n      }\n    } else {\n      setLoading(false);\n      console.log(errors);\n    }\n  };\n\n  return (\n    <>\n      <main className={styles.form_style}>\n        <h2>Edit account</h2>\n\n        <form id=\"userInfo\" onSubmit={submitHandler}>\n          <section className={styles.form_field}>\n            <input\n              defaultValue={location.state.fullName}\n              type=\"text\"\n              name=\"name\"\n              onChange={(e) => setInfo({ ...info, fullName: e.target.value })}\n            />\n            <label htmlFor=\"name\" className={styles.label_name}>\n              <span className={styles.content_name}>Full Name</span>\n              {errors.fullName && (\n                <small className={styles.errors}>Invalid Full Name</small>\n              )}\n            </label>\n          </section>\n\n          <section className={styles.form_field_radio}>\n            <section className={styles.name_section}>\n              <label id=\"gender\" className={styles.label_name}>\n                <span className={styles.content_name}>Gender</span>\n              </label>\n            </section>\n            <section className={styles.checkbox_choice_section}>\n              <input\n                onClick={() => setCheckBoxChecked(\"male\")}\n                onChange={(e) => setInfo({ ...info, gender: \"MALE\" })}\n                checked={checked === \"male\"}\n                type=\"checkbox\"\n                id=\"checkbox1\"\n              />\n              <label className={styles.checkbox} htmlFor=\"checkbox1\">\n                Male\n              </label>\n              <input\n                onClick={() => setCheckBoxChecked(\"female\")}\n                onChange={(e) => setInfo({ ...info, gender: \"FEMALE\" })}\n                checked={checked === \"female\"}\n                type=\"checkbox\"\n                id=\"checkbox2\"\n              />\n              <label className={styles.checkbox} htmlFor=\"checkbox1\">\n                Female\n              </label>\n              <input\n                onClick={() => setCheckBoxChecked(\"other\")}\n                onChange={(e) => setInfo({ ...info, gender: \"OTHER\" })}\n                checked={checked === \"other\"}\n                type=\"checkbox\"\n                id=\"checkbox3\"\n              />\n              <label className={styles.checkbox} htmlFor=\"checkbox1\">\n                Other\n              </label>\n            </section>\n          </section>\n\n          <section className={styles.form_field}>\n            <input\n              id=\"password\"\n              name=\"password\"\n              type=\"password\"\n              onChange={(e) => setInfo({ ...info, password: e.target.value })}\n            />\n\n            <label htmlFor=\"name\" className={styles.label_name}>\n              <span className={styles.content_name}>Password</span>\n              {errors.password && (\n                <small className={styles.errors}>Invalid password</small>\n              )}\n            </label>\n          </section>\n\n          <section className={styles.form_field}>\n            <input\n              id=\"repassword\"\n              name=\"repassword\"\n              type=\"password\"\n              onChange={(e) =>\n                setInfo({ ...info, repeatpassword: e.target.value })\n              }\n            />\n\n            <label htmlFor=\"repassword\" className={styles.label_name}>\n              <span className={styles.content_name}>Confirm Password</span>\n              {errors.repeatpassword && (\n                <small className={styles.errors}>{errors.repeatpassword}</small>\n              )}\n            </label>\n          </section>\n\n          <article className={styles.form_field}>\n            {loading && <LoadingDotsDark />}\n\n            {!loading && (\n              <button id=\"button\" type=\"submit\" className={styles.button}>\n                Save\n              </button>\n            )}\n          </article>\n        </form>\n      </main>\n      <Footer class={style.footer} />\n      <Background />\n    </>\n  );\n};\n\nexport default EditUserProfile;\n"]},"metadata":{},"sourceType":"module"}