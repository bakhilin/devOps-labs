{"ast":null,"code":"import { useEffect } from 'react';\nimport useHandlerSetterRef from './shared/useHandlerSetterRef';\n/**\n * Returns a callback setter for a callback to be performed when the component will unmount.\n */\n\nconst useWillUnmount = callback => {\n  const [handler, setHandler] = useHandlerSetterRef(callback);\n  useEffect(() => () => {\n    if (handler) {\n      handler.current();\n    }\n  }, []);\n  return setHandler;\n};\n\nexport default useWillUnmount;","map":{"version":3,"sources":["/home/nikita/Desktop/devOps-labs/lab5/react-frontend/node_modules/beautiful-react-hooks/esm/useWillUnmount.js"],"names":["useEffect","useHandlerSetterRef","useWillUnmount","callback","handler","setHandler","current"],"mappings":"AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,OAAOC,mBAAP,MAAgC,8BAAhC;AACA;AACA;AACA;;AACA,MAAMC,cAAc,GAAIC,QAAD,IAAc;AACjC,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBJ,mBAAmB,CAACE,QAAD,CAAjD;AACAH,EAAAA,SAAS,CAAC,MAAM,MAAM;AAClB,QAAII,OAAJ,EAAa;AACTA,MAAAA,OAAO,CAACE,OAAR;AACH;AACJ,GAJQ,EAIN,EAJM,CAAT;AAKA,SAAOD,UAAP;AACH,CARD;;AASA,eAAeH,cAAf","sourcesContent":["import { useEffect } from 'react';\nimport useHandlerSetterRef from './shared/useHandlerSetterRef';\n/**\n * Returns a callback setter for a callback to be performed when the component will unmount.\n */\nconst useWillUnmount = (callback) => {\n    const [handler, setHandler] = useHandlerSetterRef(callback);\n    useEffect(() => () => {\n        if (handler) {\n            handler.current();\n        }\n    }, []);\n    return setHandler;\n};\nexport default useWillUnmount;\n"]},"metadata":{},"sourceType":"module"}