{"ast":null,"code":"import { useRef } from 'react';\n\nconst getInitial = moduleName => ({\n  module: moduleName,\n  renders: 0,\n  timestamp: null,\n  sinceLast: null\n});\n/**\n * useRenderInfo\n * @param moduleName\n * @param log\n * @returns {{renders: number, module: *, timestamp: null}}\n */\n\n\nconst useRenderInfo = function () {\n  let moduleName = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'Unknown component';\n  let log = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n  const {\n    current: info\n  } = useRef(getInitial(moduleName));\n  const now = +Date.now();\n  info.renders += 1;\n  info.sinceLast = info.timestamp ? (now - info.timestamp) / 1000 : '[now]';\n  info.timestamp = now;\n\n  if (log) {\n    /* eslint-disable no-console */\n    console.group(`${moduleName} info`);\n    console.log(`Render no: ${info.renders}${info.renders > 1 ? `, ${info.sinceLast}s since last render` : ''}`);\n    console.dir(info);\n    console.groupEnd();\n    /* eslint-enable no-console */\n  }\n\n  return info;\n};\n\nexport default useRenderInfo;","map":{"version":3,"sources":["/home/nikita/Desktop/devOps-labs/lab5/react-frontend/node_modules/beautiful-react-hooks/esm/useRenderInfo.js"],"names":["useRef","getInitial","moduleName","module","renders","timestamp","sinceLast","useRenderInfo","log","current","info","now","Date","console","group","dir","groupEnd"],"mappings":"AAAA,SAASA,MAAT,QAAuB,OAAvB;;AACA,MAAMC,UAAU,GAAIC,UAAD,KAAiB;AAChCC,EAAAA,MAAM,EAAED,UADwB;AAEhCE,EAAAA,OAAO,EAAE,CAFuB;AAGhCC,EAAAA,SAAS,EAAE,IAHqB;AAIhCC,EAAAA,SAAS,EAAE;AAJqB,CAAjB,CAAnB;AAMA;AACA;AACA;AACA;AACA;AACA;;;AACA,MAAMC,aAAa,GAAG,YAAkD;AAAA,MAAjDL,UAAiD,uEAApC,mBAAoC;AAAA,MAAfM,GAAe,uEAAT,IAAS;AACpE,QAAM;AAAEC,IAAAA,OAAO,EAAEC;AAAX,MAAoBV,MAAM,CAACC,UAAU,CAACC,UAAD,CAAX,CAAhC;AACA,QAAMS,GAAG,GAAG,CAACC,IAAI,CAACD,GAAL,EAAb;AACAD,EAAAA,IAAI,CAACN,OAAL,IAAgB,CAAhB;AACAM,EAAAA,IAAI,CAACJ,SAAL,GAAiBI,IAAI,CAACL,SAAL,GAAiB,CAACM,GAAG,GAAGD,IAAI,CAACL,SAAZ,IAAyB,IAA1C,GAAiD,OAAlE;AACAK,EAAAA,IAAI,CAACL,SAAL,GAAiBM,GAAjB;;AACA,MAAIH,GAAJ,EAAS;AACL;AACAK,IAAAA,OAAO,CAACC,KAAR,CAAe,GAAEZ,UAAW,OAA5B;AACAW,IAAAA,OAAO,CAACL,GAAR,CAAa,cAAaE,IAAI,CAACN,OAAQ,GAAEM,IAAI,CAACN,OAAL,GAAe,CAAf,GAAoB,KAAIM,IAAI,CAACJ,SAAU,qBAAvC,GAA8D,EAAG,EAA1G;AACAO,IAAAA,OAAO,CAACE,GAAR,CAAYL,IAAZ;AACAG,IAAAA,OAAO,CAACG,QAAR;AACA;AACH;;AACD,SAAON,IAAP;AACH,CAfD;;AAgBA,eAAeH,aAAf","sourcesContent":["import { useRef } from 'react';\nconst getInitial = (moduleName) => ({\n    module: moduleName,\n    renders: 0,\n    timestamp: null,\n    sinceLast: null,\n});\n/**\n * useRenderInfo\n * @param moduleName\n * @param log\n * @returns {{renders: number, module: *, timestamp: null}}\n */\nconst useRenderInfo = (moduleName = 'Unknown component', log = true) => {\n    const { current: info } = useRef(getInitial(moduleName));\n    const now = +Date.now();\n    info.renders += 1;\n    info.sinceLast = info.timestamp ? (now - info.timestamp) / 1000 : '[now]';\n    info.timestamp = now;\n    if (log) {\n        /* eslint-disable no-console */\n        console.group(`${moduleName} info`);\n        console.log(`Render no: ${info.renders}${info.renders > 1 ? `, ${info.sinceLast}s since last render` : ''}`);\n        console.dir(info);\n        console.groupEnd();\n        /* eslint-enable no-console */\n    }\n    return info;\n};\nexport default useRenderInfo;\n"]},"metadata":{},"sourceType":"module"}