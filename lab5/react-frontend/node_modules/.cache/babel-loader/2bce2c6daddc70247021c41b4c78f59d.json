{"ast":null,"code":"import { useState } from 'react';\nimport useDragEvents from './useDragEvents';\nconst defaultOptions = {\n  dragImageXOffset: 0,\n  dragImageYOffset: 0,\n  transferFormat: 'text'\n};\n\nconst useDrag = function (targetRef) {\n  let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : defaultOptions;\n  const {\n    onDragStart,\n    onDragEnd\n  } = useDragEvents(targetRef, true);\n  const [isDragging, setIsDragging] = useState(false);\n  const opts = Object.assign(Object.assign({}, defaultOptions), options || {});\n  onDragStart(event => {\n    setIsDragging(true);\n\n    if (opts.dragImage) {\n      const img = new Image();\n      img.src = opts.dragImage;\n      event.dataTransfer.setDragImage(img, opts.dragImageXOffset, opts.dragImageYOffset);\n    }\n\n    if (opts.transfer) {\n      const data = typeof opts.transfer === 'object' ? JSON.stringify(opts.transfer) : `${opts.transfer}`;\n      event.dataTransfer.setData(opts.transferFormat, data);\n    }\n  });\n  onDragEnd(() => setIsDragging(false));\n  return isDragging;\n};\n\nexport default useDrag;","map":{"version":3,"sources":["/home/nikita/Desktop/devOps-labs/lab5/react-frontend/node_modules/beautiful-react-hooks/esm/useDrag.js"],"names":["useState","useDragEvents","defaultOptions","dragImageXOffset","dragImageYOffset","transferFormat","useDrag","targetRef","options","onDragStart","onDragEnd","isDragging","setIsDragging","opts","Object","assign","event","dragImage","img","Image","src","dataTransfer","setDragImage","transfer","data","JSON","stringify","setData"],"mappings":"AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,MAAMC,cAAc,GAAG;AACnBC,EAAAA,gBAAgB,EAAE,CADC;AAEnBC,EAAAA,gBAAgB,EAAE,CAFC;AAGnBC,EAAAA,cAAc,EAAE;AAHG,CAAvB;;AAKA,MAAMC,OAAO,GAAG,UAACC,SAAD,EAAyC;AAAA,MAA7BC,OAA6B,uEAAnBN,cAAmB;AACrD,QAAM;AAAEO,IAAAA,WAAF;AAAeC,IAAAA;AAAf,MAA6BT,aAAa,CAACM,SAAD,EAAY,IAAZ,CAAhD;AACA,QAAM,CAACI,UAAD,EAAaC,aAAb,IAA8BZ,QAAQ,CAAC,KAAD,CAA5C;AACA,QAAMa,IAAI,GAAGC,MAAM,CAACC,MAAP,CAAcD,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBb,cAAlB,CAAd,EAAkDM,OAAO,IAAI,EAA7D,CAAb;AACAC,EAAAA,WAAW,CAAEO,KAAD,IAAW;AACnBJ,IAAAA,aAAa,CAAC,IAAD,CAAb;;AACA,QAAIC,IAAI,CAACI,SAAT,EAAoB;AAChB,YAAMC,GAAG,GAAG,IAAIC,KAAJ,EAAZ;AACAD,MAAAA,GAAG,CAACE,GAAJ,GAAUP,IAAI,CAACI,SAAf;AACAD,MAAAA,KAAK,CAACK,YAAN,CAAmBC,YAAnB,CAAgCJ,GAAhC,EAAqCL,IAAI,CAACV,gBAA1C,EAA4DU,IAAI,CAACT,gBAAjE;AACH;;AACD,QAAIS,IAAI,CAACU,QAAT,EAAmB;AACf,YAAMC,IAAI,GAAG,OAAOX,IAAI,CAACU,QAAZ,KAAyB,QAAzB,GAAoCE,IAAI,CAACC,SAAL,CAAeb,IAAI,CAACU,QAApB,CAApC,GAAqE,GAAEV,IAAI,CAACU,QAAS,EAAlG;AACAP,MAAAA,KAAK,CAACK,YAAN,CAAmBM,OAAnB,CAA2Bd,IAAI,CAACR,cAAhC,EAAgDmB,IAAhD;AACH;AACJ,GAXU,CAAX;AAYAd,EAAAA,SAAS,CAAC,MAAME,aAAa,CAAC,KAAD,CAApB,CAAT;AACA,SAAOD,UAAP;AACH,CAlBD;;AAmBA,eAAeL,OAAf","sourcesContent":["import { useState } from 'react';\nimport useDragEvents from './useDragEvents';\nconst defaultOptions = {\n    dragImageXOffset: 0,\n    dragImageYOffset: 0,\n    transferFormat: 'text',\n};\nconst useDrag = (targetRef, options = defaultOptions) => {\n    const { onDragStart, onDragEnd } = useDragEvents(targetRef, true);\n    const [isDragging, setIsDragging] = useState(false);\n    const opts = Object.assign(Object.assign({}, defaultOptions), (options || {}));\n    onDragStart((event) => {\n        setIsDragging(true);\n        if (opts.dragImage) {\n            const img = new Image();\n            img.src = opts.dragImage;\n            event.dataTransfer.setDragImage(img, opts.dragImageXOffset, opts.dragImageYOffset);\n        }\n        if (opts.transfer) {\n            const data = typeof opts.transfer === 'object' ? JSON.stringify(opts.transfer) : `${opts.transfer}`;\n            event.dataTransfer.setData(opts.transferFormat, data);\n        }\n    });\n    onDragEnd(() => setIsDragging(false));\n    return isDragging;\n};\nexport default useDrag;\n"]},"metadata":{},"sourceType":"module"}