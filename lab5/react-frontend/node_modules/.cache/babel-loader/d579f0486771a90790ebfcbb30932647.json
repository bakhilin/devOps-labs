{"ast":null,"code":"import { useEffect, useRef } from 'react';\n\nconst distinctValues = (value, current, array) => array.indexOf(value) === current;\n/**\n * Accepts a variable (possibly a prop or a state) and returns its history (changes through updates).\n */\n\n\nconst useValueHistory = function (value) {\n  let distinct = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n  const history = useRef([]); // quite simple\n\n  useEffect(() => {\n    history.current.push(value);\n\n    if (distinct) {\n      history.current = history.current.filter(distinctValues);\n    }\n  }, [value]);\n  return history.current;\n};\n\nexport default useValueHistory;","map":{"version":3,"sources":["/home/nikita/Desktop/devOps-labs/lab5/react-frontend/node_modules/beautiful-react-hooks/esm/useValueHistory.js"],"names":["useEffect","useRef","distinctValues","value","current","array","indexOf","useValueHistory","distinct","history","push","filter"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,MAApB,QAAkC,OAAlC;;AACA,MAAMC,cAAc,GAAG,CAACC,KAAD,EAAQC,OAAR,EAAiBC,KAAjB,KAA2BA,KAAK,CAACC,OAAN,CAAcH,KAAd,MAAyBC,OAA3E;AACA;AACA;AACA;;;AACA,MAAMG,eAAe,GAAG,UAACJ,KAAD,EAA6B;AAAA,MAArBK,QAAqB,uEAAV,KAAU;AACjD,QAAMC,OAAO,GAAGR,MAAM,CAAC,EAAD,CAAtB,CADiD,CAEjD;;AACAD,EAAAA,SAAS,CAAC,MAAM;AACZS,IAAAA,OAAO,CAACL,OAAR,CAAgBM,IAAhB,CAAqBP,KAArB;;AACA,QAAIK,QAAJ,EAAc;AACVC,MAAAA,OAAO,CAACL,OAAR,GAAkBK,OAAO,CAACL,OAAR,CAAgBO,MAAhB,CAAuBT,cAAvB,CAAlB;AACH;AACJ,GALQ,EAKN,CAACC,KAAD,CALM,CAAT;AAMA,SAAOM,OAAO,CAACL,OAAf;AACH,CAVD;;AAWA,eAAeG,eAAf","sourcesContent":["import { useEffect, useRef } from 'react';\nconst distinctValues = (value, current, array) => array.indexOf(value) === current;\n/**\n * Accepts a variable (possibly a prop or a state) and returns its history (changes through updates).\n */\nconst useValueHistory = (value, distinct = false) => {\n    const history = useRef([]);\n    // quite simple\n    useEffect(() => {\n        history.current.push(value);\n        if (distinct) {\n            history.current = history.current.filter(distinctValues);\n        }\n    }, [value]);\n    return history.current;\n};\nexport default useValueHistory;\n"]},"metadata":{},"sourceType":"module"}