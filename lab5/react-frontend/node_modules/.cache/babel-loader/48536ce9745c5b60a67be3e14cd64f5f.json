{"ast":null,"code":"/**\n * Takes a mouse or a touch events and returns clientX and clientY values\n * @param event\n * @return {[undefined, undefined]}\n */\nexport const getPointerCoordinates = event => {\n  if (event.touches) {\n    const {\n      clientX,\n      clientY\n    } = event.touches[0];\n    return [clientX, clientY];\n  }\n\n  const {\n    clientX,\n    clientY\n  } = event;\n  return [clientX, clientY];\n};\nexport const getHorizontalDirection = alpha => alpha < 0 ? 'right' : 'left';\nexport const getVerticalDirection = alpha => alpha < 0 ? 'down' : 'up';\nexport const getDirection = (currentPoint, startingPoint, alpha) => {\n  const alphaX = startingPoint[0] - currentPoint[0];\n  const alphaY = startingPoint[1] - currentPoint[1];\n\n  if (Math.abs(alphaX) > Math.abs(alphaY)) {\n    return getHorizontalDirection(alpha[0]);\n  }\n\n  return getVerticalDirection(alpha[1]);\n};","map":{"version":3,"sources":["/home/nikita/Desktop/devOps-labs/lab5/react-frontend/node_modules/beautiful-react-hooks/esm/shared/swipeUtils.js"],"names":["getPointerCoordinates","event","touches","clientX","clientY","getHorizontalDirection","alpha","getVerticalDirection","getDirection","currentPoint","startingPoint","alphaX","alphaY","Math","abs"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMA,qBAAqB,GAAIC,KAAD,IAAW;AAC5C,MAAIA,KAAK,CAACC,OAAV,EAAmB;AACf,UAAM;AAAEC,MAAAA,OAAF;AAAWC,MAAAA;AAAX,QAAuBH,KAAK,CAACC,OAAN,CAAc,CAAd,CAA7B;AACA,WAAO,CAACC,OAAD,EAAUC,OAAV,CAAP;AACH;;AACD,QAAM;AAAED,IAAAA,OAAF;AAAWC,IAAAA;AAAX,MAAuBH,KAA7B;AACA,SAAO,CAACE,OAAD,EAAUC,OAAV,CAAP;AACH,CAPM;AAQP,OAAO,MAAMC,sBAAsB,GAAIC,KAAD,IAAYA,KAAK,GAAG,CAAR,GAAY,OAAZ,GAAsB,MAAjE;AACP,OAAO,MAAMC,oBAAoB,GAAID,KAAD,IAAYA,KAAK,GAAG,CAAR,GAAY,MAAZ,GAAqB,IAA9D;AACP,OAAO,MAAME,YAAY,GAAG,CAACC,YAAD,EAAeC,aAAf,EAA8BJ,KAA9B,KAAwC;AAChE,QAAMK,MAAM,GAAGD,aAAa,CAAC,CAAD,CAAb,GAAmBD,YAAY,CAAC,CAAD,CAA9C;AACA,QAAMG,MAAM,GAAGF,aAAa,CAAC,CAAD,CAAb,GAAmBD,YAAY,CAAC,CAAD,CAA9C;;AACA,MAAII,IAAI,CAACC,GAAL,CAASH,MAAT,IAAmBE,IAAI,CAACC,GAAL,CAASF,MAAT,CAAvB,EAAyC;AACrC,WAAOP,sBAAsB,CAACC,KAAK,CAAC,CAAD,CAAN,CAA7B;AACH;;AACD,SAAOC,oBAAoB,CAACD,KAAK,CAAC,CAAD,CAAN,CAA3B;AACH,CAPM","sourcesContent":["/**\n * Takes a mouse or a touch events and returns clientX and clientY values\n * @param event\n * @return {[undefined, undefined]}\n */\nexport const getPointerCoordinates = (event) => {\n    if (event.touches) {\n        const { clientX, clientY } = event.touches[0];\n        return [clientX, clientY];\n    }\n    const { clientX, clientY } = event;\n    return [clientX, clientY];\n};\nexport const getHorizontalDirection = (alpha) => (alpha < 0 ? 'right' : 'left');\nexport const getVerticalDirection = (alpha) => (alpha < 0 ? 'down' : 'up');\nexport const getDirection = (currentPoint, startingPoint, alpha) => {\n    const alphaX = startingPoint[0] - currentPoint[0];\n    const alphaY = startingPoint[1] - currentPoint[1];\n    if (Math.abs(alphaX) > Math.abs(alphaY)) {\n        return getHorizontalDirection(alpha[0]);\n    }\n    return getVerticalDirection(alpha[1]);\n};\n"]},"metadata":{},"sourceType":"module"}