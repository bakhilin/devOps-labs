{"ast":null,"code":"import { useEffect, useState } from 'react';\n/**\n * At the moment, the `window.speechSynthesis.getVoices` function returns all the available system voices, but since\n * it does it asynchronously the returning value is an empty array until a second call is performed.\n *\n * Check: https://w3c.github.io/speech-api/speechapi-errata.html.\n */\n\nconst asyncGetSystemVoices = () => new Promise(resolve => {\n  window.speechSynthesis.onvoiceschanged = () => resolve(window.speechSynthesis.getVoices());\n\n  window.speechSynthesis.getVoices();\n});\n/**\n * A side effect to retrieve all the available system voices using the Web_Speech_API\n */\n\n\nconst useSystemVoices = () => {\n  const [voices, setVoices] = useState([]);\n  useEffect(() => {\n    asyncGetSystemVoices().then(setVoices);\n  }, []);\n  return voices;\n};\n\nexport default useSystemVoices;","map":{"version":3,"sources":["/home/nikita/Desktop/devOps-labs/lab5/react-frontend/node_modules/beautiful-react-hooks/esm/useSystemVoices.js"],"names":["useEffect","useState","asyncGetSystemVoices","Promise","resolve","window","speechSynthesis","onvoiceschanged","getVoices","useSystemVoices","voices","setVoices","then"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,MAAMC,oBAAoB,GAAG,MAAM,IAAIC,OAAJ,CAAaC,OAAD,IAAa;AACxDC,EAAAA,MAAM,CAACC,eAAP,CAAuBC,eAAvB,GAAyC,MAAMH,OAAO,CAACC,MAAM,CAACC,eAAP,CAAuBE,SAAvB,EAAD,CAAtD;;AACAH,EAAAA,MAAM,CAACC,eAAP,CAAuBE,SAAvB;AACH,CAHkC,CAAnC;AAIA;AACA;AACA;;;AACA,MAAMC,eAAe,GAAG,MAAM;AAC1B,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBV,QAAQ,CAAC,EAAD,CAApC;AACAD,EAAAA,SAAS,CAAC,MAAM;AACZE,IAAAA,oBAAoB,GAAGU,IAAvB,CAA4BD,SAA5B;AACH,GAFQ,EAEN,EAFM,CAAT;AAGA,SAAOD,MAAP;AACH,CAND;;AAOA,eAAeD,eAAf","sourcesContent":["import { useEffect, useState } from 'react';\n/**\n * At the moment, the `window.speechSynthesis.getVoices` function returns all the available system voices, but since\n * it does it asynchronously the returning value is an empty array until a second call is performed.\n *\n * Check: https://w3c.github.io/speech-api/speechapi-errata.html.\n */\nconst asyncGetSystemVoices = () => new Promise((resolve) => {\n    window.speechSynthesis.onvoiceschanged = () => resolve(window.speechSynthesis.getVoices());\n    window.speechSynthesis.getVoices();\n});\n/**\n * A side effect to retrieve all the available system voices using the Web_Speech_API\n */\nconst useSystemVoices = () => {\n    const [voices, setVoices] = useState([]);\n    useEffect(() => {\n        asyncGetSystemVoices().then(setVoices);\n    }, []);\n    return voices;\n};\nexport default useSystemVoices;\n"]},"metadata":{},"sourceType":"module"}