{"ast":null,"code":"import { useEffect } from 'react';\nimport useHandlerSetterRef from './shared/useHandlerSetterRef';\n/**\n * Returns a callback setter for a function to be performed when the component did mount.\n */\n\nconst useDidMount = callback => {\n  const [handler, setHandler] = useHandlerSetterRef(callback);\n  useEffect(() => {\n    if (handler.current) {\n      handler.current();\n    }\n  }, []);\n  return setHandler;\n};\n\nexport default useDidMount;","map":{"version":3,"sources":["/home/nikita/Desktop/devOps-labs/lab5/react-frontend/node_modules/beautiful-react-hooks/esm/useDidMount.js"],"names":["useEffect","useHandlerSetterRef","useDidMount","callback","handler","setHandler","current"],"mappings":"AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,OAAOC,mBAAP,MAAgC,8BAAhC;AACA;AACA;AACA;;AACA,MAAMC,WAAW,GAAIC,QAAD,IAAc;AAC9B,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBJ,mBAAmB,CAACE,QAAD,CAAjD;AACAH,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAII,OAAO,CAACE,OAAZ,EAAqB;AACjBF,MAAAA,OAAO,CAACE,OAAR;AACH;AACJ,GAJQ,EAIN,EAJM,CAAT;AAKA,SAAOD,UAAP;AACH,CARD;;AASA,eAAeH,WAAf","sourcesContent":["import { useEffect } from 'react';\nimport useHandlerSetterRef from './shared/useHandlerSetterRef';\n/**\n * Returns a callback setter for a function to be performed when the component did mount.\n */\nconst useDidMount = (callback) => {\n    const [handler, setHandler] = useHandlerSetterRef(callback);\n    useEffect(() => {\n        if (handler.current) {\n            handler.current();\n        }\n    }, []);\n    return setHandler;\n};\nexport default useDidMount;\n"]},"metadata":{},"sourceType":"module"}