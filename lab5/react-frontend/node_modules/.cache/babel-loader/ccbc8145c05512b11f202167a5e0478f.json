{"ast":null,"code":"import { useCallback, useEffect, useRef } from 'react';\nimport debounce from 'lodash.debounce';\nconst defaultOptions = {\n  leading: false,\n  trailing: true\n};\n/**\n * Accepts a function and returns a new debounced yet memoized version of that same function that delays\n * its invoking by the defined time.\n * If time is not defined, its default value will be 250ms.\n */\n\nconst useDebouncedCallback = function (fn) {\n  let dependencies = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n  let wait = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 250;\n  let options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : defaultOptions;\n  const debounced = useRef(debounce(fn, wait, options));\n  useEffect(() => {\n    debounced.current = debounce(fn, wait, options);\n  }, [fn, wait, options]);\n  return useCallback(debounced.current, dependencies);\n};\n\nexport default useDebouncedCallback;","map":{"version":3,"sources":["/home/nikita/Desktop/devOps-labs/lab5/react-frontend/node_modules/beautiful-react-hooks/esm/useDebouncedCallback.js"],"names":["useCallback","useEffect","useRef","debounce","defaultOptions","leading","trailing","useDebouncedCallback","fn","dependencies","wait","options","debounced","current"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,SAAtB,EAAiCC,MAAjC,QAA+C,OAA/C;AACA,OAAOC,QAAP,MAAqB,iBAArB;AACA,MAAMC,cAAc,GAAG;AACnBC,EAAAA,OAAO,EAAE,KADU;AAEnBC,EAAAA,QAAQ,EAAE;AAFS,CAAvB;AAIA;AACA;AACA;AACA;AACA;;AACA,MAAMC,oBAAoB,GAAG,UAACC,EAAD,EAAiE;AAAA,MAA5DC,YAA4D,uEAA7C,EAA6C;AAAA,MAAzCC,IAAyC,uEAAlC,GAAkC;AAAA,MAA7BC,OAA6B,uEAAnBP,cAAmB;AAC1F,QAAMQ,SAAS,GAAGV,MAAM,CAACC,QAAQ,CAACK,EAAD,EAAKE,IAAL,EAAWC,OAAX,CAAT,CAAxB;AACAV,EAAAA,SAAS,CAAC,MAAM;AACZW,IAAAA,SAAS,CAACC,OAAV,GAAoBV,QAAQ,CAACK,EAAD,EAAKE,IAAL,EAAWC,OAAX,CAA5B;AACH,GAFQ,EAEN,CAACH,EAAD,EAAKE,IAAL,EAAWC,OAAX,CAFM,CAAT;AAGA,SAAOX,WAAW,CAACY,SAAS,CAACC,OAAX,EAAoBJ,YAApB,CAAlB;AACH,CAND;;AAOA,eAAeF,oBAAf","sourcesContent":["import { useCallback, useEffect, useRef } from 'react';\nimport debounce from 'lodash.debounce';\nconst defaultOptions = {\n    leading: false,\n    trailing: true,\n};\n/**\n * Accepts a function and returns a new debounced yet memoized version of that same function that delays\n * its invoking by the defined time.\n * If time is not defined, its default value will be 250ms.\n */\nconst useDebouncedCallback = (fn, dependencies = [], wait = 250, options = defaultOptions) => {\n    const debounced = useRef(debounce(fn, wait, options));\n    useEffect(() => {\n        debounced.current = debounce(fn, wait, options);\n    }, [fn, wait, options]);\n    return useCallback(debounced.current, dependencies);\n};\nexport default useDebouncedCallback;\n"]},"metadata":{},"sourceType":"module"}