{"ast":null,"code":"import { useState } from 'react';\nimport useMouseEvents from './useMouseEvents';\n\nconst createStateObject = event => ({\n  clientX: event.clientX,\n  clientY: event.clientY,\n  screenX: event.screenX,\n  screenY: event.screenY\n});\n/**\n * Returns the current state (position) of the mouse pointer.\n * It possibly accepts a DOM ref representing the mouse target.\n * If a target is not provided the state will be caught globally.\n */\n\n\nconst useMouseState = function () {\n  let targetRef = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n  const [state, setState] = useState({\n    clientX: 0,\n    clientY: 0,\n    screenX: 0,\n    screenY: 0\n  });\n  const {\n    onMouseMove\n  } = useMouseEvents(targetRef);\n  onMouseMove(event => {\n    const nextState = createStateObject(event);\n    setState(nextState);\n  });\n  return state;\n};\n\nexport default useMouseState;","map":{"version":3,"sources":["/home/nikita/Desktop/devOps-labs/lab5/react-frontend/node_modules/beautiful-react-hooks/esm/useMouseState.js"],"names":["useState","useMouseEvents","createStateObject","event","clientX","clientY","screenX","screenY","useMouseState","targetRef","state","setState","onMouseMove","nextState"],"mappings":"AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;;AACA,MAAMC,iBAAiB,GAAIC,KAAD,KAAY;AAClCC,EAAAA,OAAO,EAAED,KAAK,CAACC,OADmB;AAElCC,EAAAA,OAAO,EAAEF,KAAK,CAACE,OAFmB;AAGlCC,EAAAA,OAAO,EAAEH,KAAK,CAACG,OAHmB;AAIlCC,EAAAA,OAAO,EAAEJ,KAAK,CAACI;AAJmB,CAAZ,CAA1B;AAMA;AACA;AACA;AACA;AACA;;;AACA,MAAMC,aAAa,GAAG,YAAsB;AAAA,MAArBC,SAAqB,uEAAT,IAAS;AACxC,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBX,QAAQ,CAAC;AAAEI,IAAAA,OAAO,EAAE,CAAX;AAAcC,IAAAA,OAAO,EAAE,CAAvB;AAA0BC,IAAAA,OAAO,EAAE,CAAnC;AAAsCC,IAAAA,OAAO,EAAE;AAA/C,GAAD,CAAlC;AACA,QAAM;AAAEK,IAAAA;AAAF,MAAkBX,cAAc,CAACQ,SAAD,CAAtC;AACAG,EAAAA,WAAW,CAAET,KAAD,IAAW;AACnB,UAAMU,SAAS,GAAGX,iBAAiB,CAACC,KAAD,CAAnC;AACAQ,IAAAA,QAAQ,CAACE,SAAD,CAAR;AACH,GAHU,CAAX;AAIA,SAAOH,KAAP;AACH,CARD;;AASA,eAAeF,aAAf","sourcesContent":["import { useState } from 'react';\nimport useMouseEvents from './useMouseEvents';\nconst createStateObject = (event) => ({\n    clientX: event.clientX,\n    clientY: event.clientY,\n    screenX: event.screenX,\n    screenY: event.screenY,\n});\n/**\n * Returns the current state (position) of the mouse pointer.\n * It possibly accepts a DOM ref representing the mouse target.\n * If a target is not provided the state will be caught globally.\n */\nconst useMouseState = (targetRef = null) => {\n    const [state, setState] = useState({ clientX: 0, clientY: 0, screenX: 0, screenY: 0 });\n    const { onMouseMove } = useMouseEvents(targetRef);\n    onMouseMove((event) => {\n        const nextState = createStateObject(event);\n        setState(nextState);\n    });\n    return state;\n};\nexport default useMouseState;\n"]},"metadata":{},"sourceType":"module"}