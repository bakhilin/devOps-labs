{"ast":null,"code":"var _jsxFileName = \"/home/nikita/Desktop/devOps-labs/lab5/react-frontend/src/components/root/users/user/test/TestForm.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport Footer from \"../../../fragments/footer/Footer\";\nimport TestResultsService from \"../../../../../api/test/TestResultsService\";\nimport AuthenticationService from \"../../../../../api/authentication/AuthenticationService\";\nimport { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport styles from \"../../../../../css/Test.module.css\";\nimport style from \"../../../../../css/Footer.module.css\";\nimport layout from \"../../../../../css/UserHome.module.css\";\nimport BackgroundHome from \"../../../fragments/background/BackgroundHome\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst TestForm = () => {\n  _s();\n\n  let key = 1;\n  let username = AuthenticationService.getLoggedInUser();\n  let [loading, setLoading] = useState(true);\n  const questions = [{\n    questionText: \"What is missing in your life?\",\n    value: \"categoryOne\",\n    answerOptions: [{\n      answerText: \"Excitement\",\n      category: \"FUN\"\n    }, {\n      answerText: \"Mental stimulation\",\n      category: \"INTELLECTUAL\"\n    }, {\n      answerText: \"Pushing my boundaries\",\n      category: \"ACTIVE\"\n    }, {\n      answerText: \"Creativity\",\n      category: \"CREATIVE\"\n    }]\n  }, {\n    questionText: \"Do you enjoy social activities?\",\n    value: \"categoryTwo\",\n    answerOptions: [{\n      answerText: \"Yes\",\n      category: \"SOCIAL\"\n    }, {\n      answerText: \"No\",\n      category: \"OTHER\"\n    }, {\n      answerText: \"Sometimes\",\n      category: \"SOCIAL\"\n    }, {\n      answerText: \"Not sure\",\n      category: \"OTHER\"\n    }]\n  }, {\n    questionText: \"Are you an active person?\",\n    value: \"categoryThree\",\n    answerOptions: [{\n      answerText: \"Yes\",\n      category: \"ACTIVE\"\n    }, {\n      answerText: \"No\",\n      category: \"OTHER\"\n    }, {\n      answerText: \"Sometimes\",\n      category: \"ACTIVE\"\n    }, {\n      answerText: \"Not sure\",\n      category: \"OTHER\"\n    }]\n  }, {\n    questionText: \"How did you spend your last weekend?\",\n    value: \"categoryFour\",\n    answerOptions: [{\n      answerText: \"On the computer\",\n      category: \"INTELLECTUAL\"\n    }, {\n      answerText: \"On the couch\",\n      category: \"RELAX\"\n    }, {\n      answerText: \"Outside\",\n      category: \"ACTIVE\"\n    }, {\n      answerText: \"Other\",\n      category: \"OTHER\"\n    }]\n  }, {\n    questionText: \"Where did you spent your last vacation?\",\n    value: \"categoryFive\",\n    answerOptions: [{\n      answerText: \"In the mountains\",\n      category: \"ACTIVE\"\n    }, {\n      answerText: \"On the beach\",\n      category: \"RELAX\"\n    }, {\n      answerText: \"At home\",\n      category: \"RELAX\"\n    }, {\n      answerText: \"Other\",\n      category: \"OTHER\"\n    }]\n  }, {\n    questionText: \"What is the best compliment you've ever received?\",\n    value: \"categorySix\",\n    answerOptions: [{\n      answerText: \"You are creative\",\n      category: \"CREATIVE\"\n    }, {\n      answerText: \"You are fit\",\n      category: \"ACTIVE\"\n    }, {\n      answerText: \"You are smart\",\n      category: \"INTELLECTUAL\"\n    }, {\n      answerText: \"You are a good person\",\n      category: \"SOCIAL\"\n    }]\n  }, {\n    questionText: \"Are you willing to commit?\",\n    value: \"categorySeven\",\n    answerOptions: [{\n      answerText: \"Yes, always\",\n      category: \"OTHER\"\n    }, {\n      answerText: \"Sometimes\",\n      category: \"OTHER\"\n    }, {\n      answerText: \"Only if I find the perfect activity\",\n      category: \"OTHER\"\n    }, {\n      answerText: \"No\",\n      category: \"OTHER\"\n    }]\n  }, {\n    questionText: \"Your location?\",\n    value: \"location\",\n    answerOptions: [{\n      answerText: \"Zurich\",\n      category: \"ZURICH\"\n    }, {\n      answerText: \"Bern\",\n      category: \"BERN\"\n    }, {\n      answerText: \"Luzern\",\n      category: \"LUZERN\"\n    }, {\n      answerText: \"Zug\",\n      category: \"ZUG\"\n    }]\n  }];\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  const [test, setTest] = useState({\n    username: username\n  });\n\n  const handleAnswerOptionClick = answer => {\n    console.log(questions[currentQuestion].value);\n    console.log(answer);\n    setTest(test => ({ ...test,\n      [questions[currentQuestion].value]: answer\n    }));\n    const nextQuestion = currentQuestion + 1;\n    setCurrentQuestion(nextQuestion);\n\n    if (nextQuestion === questions.length) {\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    const check_uploaded = () => {\n      if (!loading) {\n        TestResultsService(test);\n      }\n    };\n\n    check_uploaded();\n  }, [loading, test]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"main\", {\n      className: layout.hobbie_main,\n      children: [currentQuestion === questions.length && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.test_form_end,\n        children: /*#__PURE__*/_jsxDEV(\"section\", {\n          className: styles.test_end,\n          children: [\"Thank you! Please visit your homepage to discover your new hobby!\", \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: styles.button,\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              to: \"/user-home\",\n              className: styles.link_home,\n              children: \"Discover\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 11\n      }, this), currentQuestion !== questions.length && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.test_form,\n        children: [/*#__PURE__*/_jsxDEV(\"section\", {\n          className: styles.question_section,\n          children: [currentQuestion !== questions.length && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.question_count,\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\"Question \", currentQuestion + 1]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 17\n          }, this), currentQuestion !== questions.length && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.question_text,\n            children: questions[currentQuestion].questionText\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n          className: styles.answer_section,\n          children: currentQuestion !== questions.length && questions[currentQuestion].answerOptions.map(answerOption => /*#__PURE__*/_jsxDEV(\"button\", {\n            className: styles.test_button,\n            onClick: () => handleAnswerOptionClick(answerOption.category),\n            children: answerOption.answerText\n          }, key++, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {\n      class: style.footer_hobbie_details\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(BackgroundHome, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(TestForm, \"xVW+FFgosxkYV8QiUci5LPzagXI=\");\n\n_c = TestForm;\nexport default TestForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"TestForm\");","map":{"version":3,"sources":["/home/nikita/Desktop/devOps-labs/lab5/react-frontend/src/components/root/users/user/test/TestForm.jsx"],"names":["React","Footer","TestResultsService","AuthenticationService","useState","useEffect","Link","styles","style","layout","BackgroundHome","TestForm","key","username","getLoggedInUser","loading","setLoading","questions","questionText","value","answerOptions","answerText","category","currentQuestion","setCurrentQuestion","test","setTest","handleAnswerOptionClick","answer","console","log","nextQuestion","length","check_uploaded","hobbie_main","test_form_end","test_end","button","link_home","test_form","question_section","question_count","question_text","answer_section","map","answerOption","test_button","footer_hobbie_details"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Footer from \"../../../fragments/footer/Footer\";\nimport TestResultsService from \"../../../../../api/test/TestResultsService\";\nimport AuthenticationService from \"../../../../../api/authentication/AuthenticationService\";\nimport { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport styles from \"../../../../../css/Test.module.css\";\nimport style from \"../../../../../css/Footer.module.css\";\nimport layout from \"../../../../../css/UserHome.module.css\";\nimport BackgroundHome from \"../../../fragments/background/BackgroundHome\";\n\nconst TestForm = () => {\n  let key = 1;\n  let username = AuthenticationService.getLoggedInUser();\n  let [loading, setLoading] = useState(true);\n\n  const questions = [\n    {\n      questionText: \"What is missing in your life?\",\n      value: \"categoryOne\",\n      answerOptions: [\n        { answerText: \"Excitement\", category: \"FUN\" },\n        { answerText: \"Mental stimulation\", category: \"INTELLECTUAL\" },\n        { answerText: \"Pushing my boundaries\", category: \"ACTIVE\" },\n        { answerText: \"Creativity\", category: \"CREATIVE\" },\n      ],\n    },\n    {\n      questionText: \"Do you enjoy social activities?\",\n      value: \"categoryTwo\",\n      answerOptions: [\n        { answerText: \"Yes\", category: \"SOCIAL\" },\n        { answerText: \"No\", category: \"OTHER\" },\n        { answerText: \"Sometimes\", category: \"SOCIAL\" },\n        { answerText: \"Not sure\", category: \"OTHER\" },\n      ],\n    },\n    {\n      questionText: \"Are you an active person?\",\n      value: \"categoryThree\",\n      answerOptions: [\n        { answerText: \"Yes\", category: \"ACTIVE\" },\n        { answerText: \"No\", category: \"OTHER\" },\n        { answerText: \"Sometimes\", category: \"ACTIVE\" },\n        { answerText: \"Not sure\", category: \"OTHER\" },\n      ],\n    },\n    {\n      questionText: \"How did you spend your last weekend?\",\n      value: \"categoryFour\",\n      answerOptions: [\n        { answerText: \"On the computer\", category: \"INTELLECTUAL\" },\n        { answerText: \"On the couch\", category: \"RELAX\" },\n        { answerText: \"Outside\", category: \"ACTIVE\" },\n        { answerText: \"Other\", category: \"OTHER\" },\n      ],\n    },\n    {\n      questionText: \"Where did you spent your last vacation?\",\n      value: \"categoryFive\",\n      answerOptions: [\n        { answerText: \"In the mountains\", category: \"ACTIVE\" },\n        { answerText: \"On the beach\", category: \"RELAX\" },\n        { answerText: \"At home\", category: \"RELAX\" },\n        { answerText: \"Other\", category: \"OTHER\" },\n      ],\n    },\n    {\n      questionText: \"What is the best compliment you've ever received?\",\n      value: \"categorySix\",\n      answerOptions: [\n        { answerText: \"You are creative\", category: \"CREATIVE\" },\n        { answerText: \"You are fit\", category: \"ACTIVE\" },\n        { answerText: \"You are smart\", category: \"INTELLECTUAL\" },\n        { answerText: \"You are a good person\", category: \"SOCIAL\" },\n      ],\n    },\n    {\n      questionText: \"Are you willing to commit?\",\n      value: \"categorySeven\",\n      answerOptions: [\n        { answerText: \"Yes, always\", category: \"OTHER\" },\n        { answerText: \"Sometimes\", category: \"OTHER\" },\n        {\n          answerText: \"Only if I find the perfect activity\",\n          category: \"OTHER\",\n        },\n        { answerText: \"No\", category: \"OTHER\" },\n      ],\n    },\n    {\n      questionText: \"Your location?\",\n      value: \"location\",\n      answerOptions: [\n        { answerText: \"Zurich\", category: \"ZURICH\" },\n        { answerText: \"Bern\", category: \"BERN\" },\n        { answerText: \"Luzern\", category: \"LUZERN\" },\n        { answerText: \"Zug\", category: \"ZUG\" },\n      ],\n    },\n  ];\n\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  const [test, setTest] = useState({\n    username: username,\n  });\n\n  const handleAnswerOptionClick = (answer) => {\n    console.log(questions[currentQuestion].value);\n    console.log(answer);\n\n    setTest((test) => ({\n      ...test,\n      [questions[currentQuestion].value]: answer,\n    }));\n\n    const nextQuestion = currentQuestion + 1;\n    setCurrentQuestion(nextQuestion);\n    if (nextQuestion === questions.length) {\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    const check_uploaded = () => {\n      if (!loading) {\n        TestResultsService(test);\n      }\n    };\n    check_uploaded();\n  }, [loading, test]);\n\n  return (\n    <>\n      <main className={layout.hobbie_main}>\n        {currentQuestion === questions.length && (\n          <div className={styles.test_form_end}>\n            <section className={styles.test_end}>\n              Thank you! Please visit your homepage to discover your new hobby!{\" \"}\n              <br></br>\n              <button type=\"submit\" className={styles.button}>\n                <Link to=\"/user-home\" className={styles.link_home}>\n                  Discover\n                </Link>\n              </button>\n            </section>\n          </div>\n        )}\n\n        {currentQuestion !== questions.length && (\n          <div className={styles.test_form}>\n            <section className={styles.question_section}>\n              {currentQuestion !== questions.length && (\n                <div className={styles.question_count}>\n                  <span>Question {currentQuestion + 1}</span>\n                </div>\n              )}\n\n              {currentQuestion !== questions.length && (\n                <div className={styles.question_text}>\n                  {questions[currentQuestion].questionText}\n                </div>\n              )}\n            </section>\n            <section className={styles.answer_section}>\n              {currentQuestion !== questions.length &&\n                questions[currentQuestion].answerOptions.map((answerOption) => (\n                  <button\n                    key={key++}\n                    className={styles.test_button}\n                    onClick={() =>\n                      handleAnswerOptionClick(answerOption.category)\n                    }\n                  >\n                    {answerOption.answerText}\n                  </button>\n                ))}\n            </section>\n          </div>\n        )}\n      </main>\n      <Footer class={style.footer_hobbie_details} />\n      <BackgroundHome />\n    </>\n  );\n};\n\nexport default TestForm;\n"]},"metadata":{},"sourceType":"module"}