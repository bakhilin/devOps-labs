{"ast":null,"code":"import { useCallback, useEffect, useMemo } from 'react';\nconst defaultOptions = {\n  rate: 0,\n  pitch: 0,\n  volume: 1\n};\n/**\n * Enables the possibility to perform a text-to-speech (with different voices) operation in your\n * React component by using the Web_Speech_API\n */\n\nconst useSpeechSynthesis = function (text) {\n  let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : defaultOptions;\n  const utter = useMemo(() => new SpeechSynthesisUtterance(text), [text]);\n  const voiceOptions = Object.assign(Object.assign({}, defaultOptions), options);\n  utter.voice = voiceOptions.voice;\n  useEffect(() => {\n    utter.pitch = voiceOptions.pitch;\n  }, [voiceOptions.pitch]);\n  useEffect(() => {\n    utter.rate = voiceOptions.rate;\n  }, [voiceOptions.rate]);\n  useEffect(() => {\n    utter.volume = voiceOptions.volume;\n  }, [voiceOptions.volume]);\n  const speak = useCallback(() => speechSynthesis.speak(utter), [text, voiceOptions.pitch, voiceOptions.rate, voiceOptions.voice, voiceOptions.volume]);\n  return {\n    speak,\n    speechSynthUtterance: utter\n  };\n};\n\nexport default useSpeechSynthesis;","map":{"version":3,"sources":["/home/nikita/Desktop/devOps-labs/lab5/react-frontend/node_modules/beautiful-react-hooks/esm/useSpeechSynthesis.js"],"names":["useCallback","useEffect","useMemo","defaultOptions","rate","pitch","volume","useSpeechSynthesis","text","options","utter","SpeechSynthesisUtterance","voiceOptions","Object","assign","voice","speak","speechSynthesis","speechSynthUtterance"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,SAAtB,EAAiCC,OAAjC,QAAgD,OAAhD;AACA,MAAMC,cAAc,GAAG;AAAEC,EAAAA,IAAI,EAAE,CAAR;AAAWC,EAAAA,KAAK,EAAE,CAAlB;AAAqBC,EAAAA,MAAM,EAAE;AAA7B,CAAvB;AACA;AACA;AACA;AACA;;AACA,MAAMC,kBAAkB,GAAG,UAACC,IAAD,EAAoC;AAAA,MAA7BC,OAA6B,uEAAnBN,cAAmB;AAC3D,QAAMO,KAAK,GAAGR,OAAO,CAAC,MAAM,IAAIS,wBAAJ,CAA6BH,IAA7B,CAAP,EAA2C,CAACA,IAAD,CAA3C,CAArB;AACA,QAAMI,YAAY,GAAGC,MAAM,CAACC,MAAP,CAAcD,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBX,cAAlB,CAAd,EAAiDM,OAAjD,CAArB;AACAC,EAAAA,KAAK,CAACK,KAAN,GAAcH,YAAY,CAACG,KAA3B;AACAd,EAAAA,SAAS,CAAC,MAAM;AACZS,IAAAA,KAAK,CAACL,KAAN,GAAcO,YAAY,CAACP,KAA3B;AACH,GAFQ,EAEN,CAACO,YAAY,CAACP,KAAd,CAFM,CAAT;AAGAJ,EAAAA,SAAS,CAAC,MAAM;AACZS,IAAAA,KAAK,CAACN,IAAN,GAAaQ,YAAY,CAACR,IAA1B;AACH,GAFQ,EAEN,CAACQ,YAAY,CAACR,IAAd,CAFM,CAAT;AAGAH,EAAAA,SAAS,CAAC,MAAM;AACZS,IAAAA,KAAK,CAACJ,MAAN,GAAeM,YAAY,CAACN,MAA5B;AACH,GAFQ,EAEN,CAACM,YAAY,CAACN,MAAd,CAFM,CAAT;AAGA,QAAMU,KAAK,GAAGhB,WAAW,CAAC,MAAMiB,eAAe,CAACD,KAAhB,CAAsBN,KAAtB,CAAP,EAAqC,CAACF,IAAD,EAAOI,YAAY,CAACP,KAApB,EAA2BO,YAAY,CAACR,IAAxC,EAA8CQ,YAAY,CAACG,KAA3D,EAAkEH,YAAY,CAACN,MAA/E,CAArC,CAAzB;AACA,SAAO;AACHU,IAAAA,KADG;AAEHE,IAAAA,oBAAoB,EAAER;AAFnB,GAAP;AAIH,CAlBD;;AAmBA,eAAeH,kBAAf","sourcesContent":["import { useCallback, useEffect, useMemo } from 'react';\nconst defaultOptions = { rate: 0, pitch: 0, volume: 1 };\n/**\n * Enables the possibility to perform a text-to-speech (with different voices) operation in your\n * React component by using the Web_Speech_API\n */\nconst useSpeechSynthesis = (text, options = defaultOptions) => {\n    const utter = useMemo(() => new SpeechSynthesisUtterance(text), [text]);\n    const voiceOptions = Object.assign(Object.assign({}, defaultOptions), options);\n    utter.voice = voiceOptions.voice;\n    useEffect(() => {\n        utter.pitch = voiceOptions.pitch;\n    }, [voiceOptions.pitch]);\n    useEffect(() => {\n        utter.rate = voiceOptions.rate;\n    }, [voiceOptions.rate]);\n    useEffect(() => {\n        utter.volume = voiceOptions.volume;\n    }, [voiceOptions.volume]);\n    const speak = useCallback(() => speechSynthesis.speak(utter), [text, voiceOptions.pitch, voiceOptions.rate, voiceOptions.voice, voiceOptions.volume]);\n    return {\n        speak,\n        speechSynthUtterance: utter,\n    };\n};\nexport default useSpeechSynthesis;\n"]},"metadata":{},"sourceType":"module"}