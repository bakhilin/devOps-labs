{"ast":null,"code":"var _jsxFileName = \"/home/nikita/Desktop/devOps-labs/lab5/react-frontend/src/components/root/users/login/Login.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport Footer from \"../../fragments/footer/Footer\";\nimport Background from \"../../fragments/background/Background\";\nimport { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport AuthenticationService from \"../../../../api/authentication/AuthenticationService\";\nimport LoginService from \"../../../../api/login/LoginService\";\nimport styles from \"../../../../css/Forms.module.css\";\nimport style from \"../../../../css/Footer.module.css\";\nimport { Link } from \"react-router-dom\";\nimport AuthenticateUserDataService from \"../../../../api/authentication/AuthenticateUserDataService\";\nimport LoadingDotsDark from \"./animation/LoadingDotsDark\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Login = () => {\n  _s();\n\n  const navigate = useNavigate();\n  const [loading, setLoading] = useState(false);\n  const [errors, setErrors] = useState({});\n  const [credentials, setCredentials] = useState({\n    username: \"\",\n    password: \"\"\n  });\n  const [loginState, setLoginState] = useState({\n    hasLoginFailed: false,\n    showSuccessMessage: false\n  });\n\n  const validate = () => {\n    const errors = {};\n\n    if (!credentials.username) {\n      errors.username = \"Username required\";\n    } else if (credentials.username.length < 4) {\n      errors.username = \"Minimum 4 characters\";\n    }\n\n    if (!credentials.password) {\n      errors.password = \"A password is required\";\n    }\n\n    return errors;\n  };\n\n  const loginClicked = async event => {\n    event.preventDefault();\n    let errors = validate(credentials);\n    setErrors(errors);\n    console.log(errors);\n\n    if (Object.keys(errors).length === 0) {\n      setLoading(true);\n      const res = await AuthenticateUserDataService(credentials.username, credentials.password);\n      console.log(res.data);\n\n      if (res.status !== 200) {\n        setLoading(false);\n        setLoginState(prevState => ({ ...prevState,\n          hasLoginFailed: true\n        }));\n        setLoginState(prevState => ({ ...prevState,\n          showSuccessMessage: false\n        }));\n      } else {\n        let jwtToken = res.data.jwtToken;\n        const token = `Bearer ${jwtToken}`;\n        AuthenticationService.setUpToken(token);\n        const response = await LoginService(credentials.username, jwtToken);\n        console.log(response);\n\n        if (response.status !== 200) {\n          setLoading(false);\n          setLoginState(prevState => ({ ...prevState,\n            hasLoginFailed: true\n          }));\n          setLoginState(prevState => ({ ...prevState,\n            showSuccessMessage: false\n          }));\n        } else if (response.data === \"USER\") {\n          AuthenticationService.registerSuccessfulLoginUser(credentials.username);\n          navigate(\"/user-home\");\n        } else if (response.data === \"BUSINESS_USER\") {\n          AuthenticationService.registerSuccessfulLoginBusiness(credentials.username);\n          navigate(\"/business-home\");\n        }\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"main\", {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        className: styles.form_style,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.loginh1,\n          children: /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.login,\n          children: [loginState.hasLoginFailed && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.midErrors,\n            children: \" Invalid credentials\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 15\n          }, this), loginState.showSuccessMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.midErrors,\n            children: \"Login successful\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.form_field,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"username\",\n            type: \"text\",\n            name: \"username\",\n            onChange: e => setCredentials({ ...credentials,\n              username: e.target.value\n            }),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"username\",\n            className: styles.label_name,\n            children: [Object.keys(errors).length === 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: styles.content_name,\n              children: \"Username\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 17\n            }, this), errors.username && /*#__PURE__*/_jsxDEV(\"small\", {\n              className: styles.errors,\n              children: errors.username\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.form_field,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            id: \"password\",\n            name: \"password\",\n            onChange: e => setCredentials({ ...credentials,\n              password: e.target.value\n            }),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"password\",\n            className: styles.label_name,\n            children: [Object.keys(errors).length === 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: styles.content_name,\n              children: \"Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 17\n            }, this), errors.password && /*#__PURE__*/_jsxDEV(\"small\", {\n              className: styles.errors,\n              children: \"Password required\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/change-password\",\n            className: styles.button_password_forgot,\n            children: \"Forgot your password?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 11\n        }, this), loading && /*#__PURE__*/_jsxDEV(LoadingDotsDark, {\n          className: styles.dots\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 23\n        }, this), !loading && /*#__PURE__*/_jsxDEV(\"button\", {\n          className: styles.button,\n          onClick: loginClicked,\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {\n      class: style.footer_cover\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Background, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Login, \"FlfYAY7knkHt94GogG2Ueyh7r/U=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/home/nikita/Desktop/devOps-labs/lab5/react-frontend/src/components/root/users/login/Login.jsx"],"names":["React","Footer","Background","useState","useNavigate","AuthenticationService","LoginService","styles","style","Link","AuthenticateUserDataService","LoadingDotsDark","Login","navigate","loading","setLoading","errors","setErrors","credentials","setCredentials","username","password","loginState","setLoginState","hasLoginFailed","showSuccessMessage","validate","length","loginClicked","event","preventDefault","console","log","Object","keys","res","data","status","prevState","jwtToken","token","setUpToken","response","registerSuccessfulLoginUser","registerSuccessfulLoginBusiness","form_style","loginh1","login","midErrors","form_field","e","target","value","label_name","content_name","button_password_forgot","dots","button","footer_cover"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,+BAAnB;AACA,OAAOC,UAAP,MAAuB,uCAAvB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,OAAOC,qBAAP,MAAkC,sDAAlC;AACA,OAAOC,YAAP,MAAyB,oCAAzB;AACA,OAAOC,MAAP,MAAmB,kCAAnB;AACA,OAAOC,KAAP,MAAkB,mCAAlB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,2BAAP,MAAwC,4DAAxC;AACA,OAAOC,eAAP,MAA4B,6BAA5B;;;;AAEA,MAAMC,KAAK,GAAG,MAAM;AAAA;;AAClB,QAAMC,QAAQ,GAAGT,WAAW,EAA5B;AACA,QAAM,CAACU,OAAD,EAAUC,UAAV,IAAwBZ,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACa,MAAD,EAASC,SAAT,IAAsBd,QAAQ,CAAC,EAAD,CAApC;AAEA,QAAM,CAACe,WAAD,EAAcC,cAAd,IAAgChB,QAAQ,CAAC;AAC7CiB,IAAAA,QAAQ,EAAE,EADmC;AAE7CC,IAAAA,QAAQ,EAAE;AAFmC,GAAD,CAA9C;AAKA,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BpB,QAAQ,CAAC;AAC3CqB,IAAAA,cAAc,EAAE,KAD2B;AAE3CC,IAAAA,kBAAkB,EAAE;AAFuB,GAAD,CAA5C;;AAKA,QAAMC,QAAQ,GAAG,MAAM;AACrB,UAAMV,MAAM,GAAG,EAAf;;AAEA,QAAI,CAACE,WAAW,CAACE,QAAjB,EAA2B;AACzBJ,MAAAA,MAAM,CAACI,QAAP,GAAkB,mBAAlB;AACD,KAFD,MAEO,IAAIF,WAAW,CAACE,QAAZ,CAAqBO,MAArB,GAA8B,CAAlC,EAAqC;AAC1CX,MAAAA,MAAM,CAACI,QAAP,GAAkB,sBAAlB;AACD;;AAED,QAAI,CAACF,WAAW,CAACG,QAAjB,EAA2B;AACzBL,MAAAA,MAAM,CAACK,QAAP,GAAkB,wBAAlB;AACD;;AAED,WAAOL,MAAP;AACD,GAdD;;AAgBA,QAAMY,YAAY,GAAG,MAAOC,KAAP,IAAiB;AACpCA,IAAAA,KAAK,CAACC,cAAN;AACA,QAAId,MAAM,GAAGU,QAAQ,CAACR,WAAD,CAArB;AACAD,IAAAA,SAAS,CAACD,MAAD,CAAT;AACAe,IAAAA,OAAO,CAACC,GAAR,CAAYhB,MAAZ;;AACA,QAAIiB,MAAM,CAACC,IAAP,CAAYlB,MAAZ,EAAoBW,MAApB,KAA+B,CAAnC,EAAsC;AACpCZ,MAAAA,UAAU,CAAC,IAAD,CAAV;AACA,YAAMoB,GAAG,GAAG,MAAMzB,2BAA2B,CAC3CQ,WAAW,CAACE,QAD+B,EAE3CF,WAAW,CAACG,QAF+B,CAA7C;AAIAU,MAAAA,OAAO,CAACC,GAAR,CAAYG,GAAG,CAACC,IAAhB;;AAEA,UAAID,GAAG,CAACE,MAAJ,KAAe,GAAnB,EAAwB;AACtBtB,QAAAA,UAAU,CAAC,KAAD,CAAV;AACAQ,QAAAA,aAAa,CAAEe,SAAD,KAAgB,EAAE,GAAGA,SAAL;AAAgBd,UAAAA,cAAc,EAAE;AAAhC,SAAhB,CAAD,CAAb;AACAD,QAAAA,aAAa,CAAEe,SAAD,KAAgB,EAC5B,GAAGA,SADyB;AAE5Bb,UAAAA,kBAAkB,EAAE;AAFQ,SAAhB,CAAD,CAAb;AAID,OAPD,MAOO;AACL,YAAIc,QAAQ,GAAGJ,GAAG,CAACC,IAAJ,CAASG,QAAxB;AACA,cAAMC,KAAK,GAAI,UAASD,QAAS,EAAjC;AACAlC,QAAAA,qBAAqB,CAACoC,UAAtB,CAAiCD,KAAjC;AACA,cAAME,QAAQ,GAAG,MAAMpC,YAAY,CAACY,WAAW,CAACE,QAAb,EAAuBmB,QAAvB,CAAnC;AACAR,QAAAA,OAAO,CAACC,GAAR,CAAYU,QAAZ;;AACA,YAAIA,QAAQ,CAACL,MAAT,KAAoB,GAAxB,EAA6B;AAC3BtB,UAAAA,UAAU,CAAC,KAAD,CAAV;AACAQ,UAAAA,aAAa,CAAEe,SAAD,KAAgB,EAC5B,GAAGA,SADyB;AAE5Bd,YAAAA,cAAc,EAAE;AAFY,WAAhB,CAAD,CAAb;AAIAD,UAAAA,aAAa,CAAEe,SAAD,KAAgB,EAC5B,GAAGA,SADyB;AAE5Bb,YAAAA,kBAAkB,EAAE;AAFQ,WAAhB,CAAD,CAAb;AAID,SAVD,MAUO,IAAIiB,QAAQ,CAACN,IAAT,KAAkB,MAAtB,EAA8B;AACnC/B,UAAAA,qBAAqB,CAACsC,2BAAtB,CACEzB,WAAW,CAACE,QADd;AAGAP,UAAAA,QAAQ,CAAC,YAAD,CAAR;AACD,SALM,MAKA,IAAI6B,QAAQ,CAACN,IAAT,KAAkB,eAAtB,EAAuC;AAC5C/B,UAAAA,qBAAqB,CAACuC,+BAAtB,CACE1B,WAAW,CAACE,QADd;AAGAP,UAAAA,QAAQ,CAAC,gBAAD,CAAR;AACD;AACF;AACF;AACF,GAjDD;;AAmDA,sBACE;AAAA,4BACE;AAAA,6BACE;AAAM,QAAA,SAAS,EAAEN,MAAM,CAACsC,UAAxB;AAAA,gCACE;AAAK,UAAA,SAAS,EAAEtC,MAAM,CAACuC,OAAvB;AAAA,iCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF,eAIE;AAAK,UAAA,SAAS,EAAEvC,MAAM,CAACwC,KAAvB;AAAA,qBACGzB,UAAU,CAACE,cAAX,iBACC;AAAK,YAAA,SAAS,EAAEjB,MAAM,CAACyC,SAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ,EAIG1B,UAAU,CAACG,kBAAX,iBACC;AAAK,YAAA,SAAS,EAAElB,MAAM,CAACyC,SAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBALJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJF,eAaE;AAAK,UAAA,SAAS,EAAEzC,MAAM,CAAC0C,UAAvB;AAAA,kCACE;AACE,YAAA,EAAE,EAAC,UADL;AAEE,YAAA,IAAI,EAAC,MAFP;AAGE,YAAA,IAAI,EAAC,UAHP;AAIE,YAAA,QAAQ,EAAGC,CAAD,IACR/B,cAAc,CAAC,EAAE,GAAGD,WAAL;AAAkBE,cAAAA,QAAQ,EAAE8B,CAAC,CAACC,MAAF,CAASC;AAArC,aAAD,CALlB;AAOE,YAAA,QAAQ;AAPV;AAAA;AAAA;AAAA;AAAA,kBADF,eAUE;AAAO,YAAA,OAAO,EAAC,UAAf;AAA0B,YAAA,SAAS,EAAE7C,MAAM,CAAC8C,UAA5C;AAAA,uBACGpB,MAAM,CAACC,IAAP,CAAYlB,MAAZ,EAAoBW,MAApB,KAA+B,CAA/B,iBACC;AAAM,cAAA,SAAS,EAAEpB,MAAM,CAAC+C,YAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFJ,EAIGtC,MAAM,CAACI,QAAP,iBACC;AAAO,cAAA,SAAS,EAAEb,MAAM,CAACS,MAAzB;AAAA,wBAAkCA,MAAM,CAACI;AAAzC;AAAA;AAAA;AAAA;AAAA,oBALJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBAVF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAbF,eAiCE;AAAK,UAAA,SAAS,EAAEb,MAAM,CAAC0C,UAAvB;AAAA,kCACE;AACE,YAAA,IAAI,EAAC,UADP;AAEE,YAAA,EAAE,EAAC,UAFL;AAGE,YAAA,IAAI,EAAC,UAHP;AAIE,YAAA,QAAQ,EAAGC,CAAD,IACR/B,cAAc,CAAC,EAAE,GAAGD,WAAL;AAAkBG,cAAAA,QAAQ,EAAE6B,CAAC,CAACC,MAAF,CAASC;AAArC,aAAD,CALlB;AAOE,YAAA,QAAQ;AAPV;AAAA;AAAA;AAAA;AAAA,kBADF,eAUE;AAAO,YAAA,OAAO,EAAC,UAAf;AAA0B,YAAA,SAAS,EAAE7C,MAAM,CAAC8C,UAA5C;AAAA,uBACGpB,MAAM,CAACC,IAAP,CAAYlB,MAAZ,EAAoBW,MAApB,KAA+B,CAA/B,iBACC;AAAM,cAAA,SAAS,EAAEpB,MAAM,CAAC+C,YAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFJ,EAIGtC,MAAM,CAACK,QAAP,iBACC;AAAO,cAAA,SAAS,EAAEd,MAAM,CAACS,MAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBALJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBAVF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAjCF,eAoDE;AAAA,iCACE,QAAC,IAAD;AACE,YAAA,EAAE,EAAC,kBADL;AAEE,YAAA,SAAS,EAAET,MAAM,CAACgD,sBAFpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBApDF,EA4DGzC,OAAO,iBAAI,QAAC,eAAD;AAAiB,UAAA,SAAS,EAAEP,MAAM,CAACiD;AAAnC;AAAA;AAAA;AAAA;AAAA,gBA5Dd,EA6DG,CAAC1C,OAAD,iBACC;AAAQ,UAAA,SAAS,EAAEP,MAAM,CAACkD,MAA1B;AAAkC,UAAA,OAAO,EAAE7B,YAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBA9DJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAsEE,QAAC,MAAD;AAAQ,MAAA,KAAK,EAAEpB,KAAK,CAACkD;AAArB;AAAA;AAAA;AAAA;AAAA,YAtEF,eAuEE,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,YAvEF;AAAA,kBADF;AA2ED,CA7JD;;GAAM9C,K;UACaR,W;;;KADbQ,K;AA+JN,eAAeA,KAAf","sourcesContent":["import React from \"react\";\nimport Footer from \"../../fragments/footer/Footer\";\nimport Background from \"../../fragments/background/Background\";\nimport { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport AuthenticationService from \"../../../../api/authentication/AuthenticationService\";\nimport LoginService from \"../../../../api/login/LoginService\";\nimport styles from \"../../../../css/Forms.module.css\";\nimport style from \"../../../../css/Footer.module.css\";\nimport { Link } from \"react-router-dom\";\nimport AuthenticateUserDataService from \"../../../../api/authentication/AuthenticateUserDataService\";\nimport LoadingDotsDark from \"./animation/LoadingDotsDark\";\n\nconst Login = () => {\n  const navigate = useNavigate();\n  const [loading, setLoading] = useState(false);\n  const [errors, setErrors] = useState({});\n\n  const [credentials, setCredentials] = useState({\n    username: \"\",\n    password: \"\",\n  });\n\n  const [loginState, setLoginState] = useState({\n    hasLoginFailed: false,\n    showSuccessMessage: false,\n  });\n\n  const validate = () => {\n    const errors = {};\n\n    if (!credentials.username) {\n      errors.username = \"Username required\";\n    } else if (credentials.username.length < 4) {\n      errors.username = \"Minimum 4 characters\";\n    }\n\n    if (!credentials.password) {\n      errors.password = \"A password is required\";\n    }\n\n    return errors;\n  };\n\n  const loginClicked = async (event) => {\n    event.preventDefault();\n    let errors = validate(credentials);\n    setErrors(errors);\n    console.log(errors);\n    if (Object.keys(errors).length === 0) {\n      setLoading(true);\n      const res = await AuthenticateUserDataService(\n        credentials.username,\n        credentials.password\n      );\n      console.log(res.data);\n\n      if (res.status !== 200) {\n        setLoading(false);\n        setLoginState((prevState) => ({ ...prevState, hasLoginFailed: true }));\n        setLoginState((prevState) => ({\n          ...prevState,\n          showSuccessMessage: false,\n        }));\n      } else {\n        let jwtToken = res.data.jwtToken;\n        const token = `Bearer ${jwtToken}`;\n        AuthenticationService.setUpToken(token);\n        const response = await LoginService(credentials.username, jwtToken);\n        console.log(response);\n        if (response.status !== 200) {\n          setLoading(false);\n          setLoginState((prevState) => ({\n            ...prevState,\n            hasLoginFailed: true,\n          }));\n          setLoginState((prevState) => ({\n            ...prevState,\n            showSuccessMessage: false,\n          }));\n        } else if (response.data === \"USER\") {\n          AuthenticationService.registerSuccessfulLoginUser(\n            credentials.username\n          );\n          navigate(\"/user-home\");\n        } else if (response.data === \"BUSINESS_USER\") {\n          AuthenticationService.registerSuccessfulLoginBusiness(\n            credentials.username\n          );\n          navigate(\"/business-home\");\n        }\n      }\n    }\n  };\n\n  return (\n    <>\n      <main>\n        <form className={styles.form_style}>\n          <div className={styles.loginh1}>\n            <h1>Login</h1>\n          </div>\n          <div className={styles.login}>\n            {loginState.hasLoginFailed && (\n              <div className={styles.midErrors}> Invalid credentials</div>\n            )}\n            {loginState.showSuccessMessage && (\n              <div className={styles.midErrors}>Login successful</div>\n            )}\n          </div>\n\n          <div className={styles.form_field}>\n            <input\n              id=\"username\"\n              type=\"text\"\n              name=\"username\"\n              onChange={(e) =>\n                setCredentials({ ...credentials, username: e.target.value })\n              }\n              required\n            />\n            <label htmlFor=\"username\" className={styles.label_name}>\n              {Object.keys(errors).length === 0 && (\n                <span className={styles.content_name}>Username</span>\n              )}\n              {errors.username && (\n                <small className={styles.errors}>{errors.username}</small>\n              )}\n            </label>\n          </div>\n\n          <div className={styles.form_field}>\n            <input\n              type=\"password\"\n              id=\"password\"\n              name=\"password\"\n              onChange={(e) =>\n                setCredentials({ ...credentials, password: e.target.value })\n              }\n              required\n            />\n            <label htmlFor=\"password\" className={styles.label_name}>\n              {Object.keys(errors).length === 0 && (\n                <span className={styles.content_name}>Password</span>\n              )}\n              {errors.password && (\n                <small className={styles.errors}>Password required</small>\n              )}\n            </label>\n          </div>\n          <p>\n            <Link\n              to=\"/change-password\"\n              className={styles.button_password_forgot}\n            >\n              Forgot your password?\n            </Link>\n          </p>\n          {loading && <LoadingDotsDark className={styles.dots} />}  \n          {!loading && (\n            <button className={styles.button} onClick={loginClicked}>\n              Login\n            </button>\n          )}\n        </form>\n      </main>\n      <Footer class={style.footer_cover} />\n      <Background />\n    </>\n  );\n};\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}