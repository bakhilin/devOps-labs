{"ast":null,"code":"var _jsxFileName = \"/home/nikita/Desktop/devOps-labs/lab5/react-frontend/src/components/root/users/login/forgottenPassword/SetUpNewPassword.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport Footer from \"../../../fragments/footer/Footer\";\nimport Background from \"../../../fragments/background/Background\";\nimport { useState } from \"react\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport styles from \"../../../../../css/Forms.module.css\";\nimport style from \"../../../../../css/Footer.module.css\";\nimport UpdatePasswordService from \"../../../../../api/login/forgottenPassword/UpdatePasswordService\";\nimport LoadingDotsDark from \"../animation/LoadingDotsDark\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst SetUpNewPassword = () => {\n  _s();\n\n  const navigate = useNavigate();\n  const params = useParams();\n  const id = params.id;\n  const [loading, setLoading] = useState(false);\n  const [errors, setErrors] = useState({});\n  const [info, setInfo] = useState({\n    password: \"\",\n    repeatpassword: \"\"\n  });\n\n  const validate = () => {\n    const errors = {};\n\n    if (!info.password) {\n      errors.password = \"A password is required\";\n    }\n\n    if (!info.repeatpassword) {\n      errors.repeatpassword = \"Repeate password\";\n    }\n\n    if (info.password !== info.repeatpassword) {\n      errors.repeatpassword = \"Passwords don't match\";\n    }\n\n    return errors;\n  };\n\n  const updatePassword = async event => {\n    event.preventDefault();\n    let errors = validate(info);\n    setErrors(errors);\n\n    if (Object.keys(errors).length === 0) {\n      console.log(info);\n      setLoading(true);\n      const response = await UpdatePasswordService(id, info.password);\n      console.log(response);\n\n      if (response.status === 201) {\n        navigate(\"/login\");\n      }\n    } else {\n      console.log(errors);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"main\", {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        className: styles.form_style,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.form_field,\n            children: /*#__PURE__*/_jsxDEV(\"section\", {\n              className: styles.name_section,\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                id: \"password\",\n                name: \"password\",\n                type: \"password\",\n                onChange: e => setInfo({ ...info,\n                  password: e.target.value\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 64,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"password\",\n                className: styles.label_name,\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: styles.content_name,\n                  children: \"Password\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 74,\n                  columnNumber: 19\n                }, this), errors.password && /*#__PURE__*/_jsxDEV(\"small\", {\n                  className: styles.errors,\n                  children: \"Invalid password\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 76,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.form_field,\n            children: /*#__PURE__*/_jsxDEV(\"section\", {\n              className: styles.name_section,\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                id: \"repassword\",\n                name: \"repassword\",\n                type: \"password\",\n                onChange: e => setInfo({ ...info,\n                  repeatpassword: e.target.value\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"repassword\",\n                className: styles.label_name,\n                children: [!errors.repeatpassword && /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: styles.content_name,\n                  children: \"Confirm Password\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 95,\n                  columnNumber: 21\n                }, this), errors.repeatpassword && /*#__PURE__*/_jsxDEV(\"small\", {\n                  className: styles.errors,\n                  children: errors.repeatpassword\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 100,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 93,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }, this), loading && /*#__PURE__*/_jsxDEV(LoadingDotsDark, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 25\n          }, this), !loading && /*#__PURE__*/_jsxDEV(\"button\", {\n            className: styles.button,\n            onClick: updatePassword,\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {\n      class: style.footer_cover\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Background, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(SetUpNewPassword, \"kMbF0IokGWcQrTQEXneqeNMUhPs=\", false, function () {\n  return [useNavigate, useParams];\n});\n\n_c = SetUpNewPassword;\nexport default SetUpNewPassword;\n\nvar _c;\n\n$RefreshReg$(_c, \"SetUpNewPassword\");","map":{"version":3,"sources":["/home/nikita/Desktop/devOps-labs/lab5/react-frontend/src/components/root/users/login/forgottenPassword/SetUpNewPassword.jsx"],"names":["React","Footer","Background","useState","useNavigate","useParams","styles","style","UpdatePasswordService","LoadingDotsDark","SetUpNewPassword","navigate","params","id","loading","setLoading","errors","setErrors","info","setInfo","password","repeatpassword","validate","updatePassword","event","preventDefault","Object","keys","length","console","log","response","status","form_style","form_field","name_section","e","target","value","label_name","content_name","button","footer_cover"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Footer from \"../../../fragments/footer/Footer\";\nimport Background from \"../../../fragments/background/Background\";\nimport { useState } from \"react\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport styles from \"../../../../../css/Forms.module.css\";\nimport style from \"../../../../../css/Footer.module.css\";\nimport UpdatePasswordService from \"../../../../../api/login/forgottenPassword/UpdatePasswordService\";\nimport LoadingDotsDark from \"../animation/LoadingDotsDark\";\n\nconst SetUpNewPassword = () => {\n  const navigate = useNavigate();\n  const params = useParams();\n  const id = params.id;\n\n  const [loading, setLoading] = useState(false);\n  const [errors, setErrors] = useState({});\n  const [info, setInfo] = useState({\n    password: \"\",\n    repeatpassword: \"\",\n  });\n\n  const validate = () => {\n    const errors = {};\n\n    if (!info.password) {\n      errors.password = \"A password is required\";\n    }\n    if (!info.repeatpassword) {\n      errors.repeatpassword = \"Repeate password\";\n    }\n    if (info.password !== info.repeatpassword) {\n      errors.repeatpassword = \"Passwords don't match\";\n    }\n\n    return errors;\n  };\n\n  const updatePassword = async (event) => {\n    event.preventDefault();\n    let errors = validate(info);\n    setErrors(errors);\n\n    if (Object.keys(errors).length === 0) {\n      console.log(info);\n      setLoading(true);\n      const response = await UpdatePasswordService(id, info.password);\n      console.log(response);\n      if (response.status === 201) {\n        navigate(\"/login\");\n      }\n    } else {\n      console.log(errors);\n    }\n  };\n\n  return (\n    <>\n      <main>\n        <form className={styles.form_style}>\n          <div>\n            <div className={styles.form_field}>\n              <section className={styles.name_section}>\n                <input\n                  id=\"password\"\n                  name=\"password\"\n                  type=\"password\"\n                  onChange={(e) =>\n                    setInfo({ ...info, password: e.target.value })\n                  }\n                />\n\n                <label htmlFor=\"password\" className={styles.label_name}>\n                  <span className={styles.content_name}>Password</span>\n                  {errors.password && (\n                    <small className={styles.errors}>Invalid password</small>\n                  )}\n                </label>\n              </section>\n            </div>\n\n            <div className={styles.form_field}>\n              <section className={styles.name_section}>\n                <input\n                  id=\"repassword\"\n                  name=\"repassword\"\n                  type=\"password\"\n                  onChange={(e) =>\n                    setInfo({ ...info, repeatpassword: e.target.value })\n                  }\n                />\n\n                <label htmlFor=\"repassword\" className={styles.label_name}>\n                  {!errors.repeatpassword && (\n                    <span className={styles.content_name}>\n                      Confirm Password\n                    </span>\n                  )}\n                  {errors.repeatpassword && (\n                    <small className={styles.errors}>\n                      {errors.repeatpassword}\n                    </small>\n                  )}\n                </label>\n              </section>\n            </div>\n            {loading && <LoadingDotsDark />}\n\n            {!loading && (\n              <button className={styles.button} onClick={updatePassword}>\n                Submit\n              </button>\n            )}\n          </div>\n        </form>\n      </main>\n      <Footer class={style.footer_cover} />\n      <Background />\n    </>\n  );\n};\n\nexport default SetUpNewPassword;\n"]},"metadata":{},"sourceType":"module"}