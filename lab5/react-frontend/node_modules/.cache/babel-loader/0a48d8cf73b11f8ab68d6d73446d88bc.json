{"ast":null,"code":"class AuthenticationService {\n  registerSuccessfulLoginBusiness(username) {\n    sessionStorage.setItem(\"authenticatedUser\", username);\n    sessionStorage.setItem(\"role\", \"business\");\n    console.log(\"Successful login\");\n  }\n\n  registerSuccessfulLoginUser(username) {\n    sessionStorage.setItem(\"authenticatedUser\", username);\n    sessionStorage.setItem(\"role\", \"user\");\n    console.log(\"Successful login\");\n  }\n\n  logout() {\n    localStorage.clear();\n    sessionStorage.clear();\n    window.location.reload(false);\n  }\n\n  isUserLoggedIn() {\n    let role = sessionStorage.getItem(\"role\");\n\n    if (role !== \"user\") {\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  isBusinessLoggedIn() {\n    let role = sessionStorage.getItem(\"role\");\n\n    if (role !== \"business\") {\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  getLoggedInUser() {\n    let username = sessionStorage.getItem(\"authenticatedUser\");\n\n    if (username == null) {\n      return \"\";\n    } else {\n      return username;\n    }\n  }\n\n  setUpToken(jwtToken) {\n    localStorage.setItem(\"token\", jwtToken);\n  }\n\n}\n\nexport default new AuthenticationService();","map":{"version":3,"sources":["/home/nikita/Desktop/devOps-labs/lab5/react-frontend/src/api/authentication/AuthenticationService.js"],"names":["AuthenticationService","registerSuccessfulLoginBusiness","username","sessionStorage","setItem","console","log","registerSuccessfulLoginUser","logout","localStorage","clear","window","location","reload","isUserLoggedIn","role","getItem","isBusinessLoggedIn","getLoggedInUser","setUpToken","jwtToken"],"mappings":"AAAA,MAAMA,qBAAN,CAA4B;AAC1BC,EAAAA,+BAA+B,CAACC,QAAD,EAAW;AACxCC,IAAAA,cAAc,CAACC,OAAf,CAAuB,mBAAvB,EAA4CF,QAA5C;AACAC,IAAAA,cAAc,CAACC,OAAf,CAAuB,MAAvB,EAA+B,UAA/B;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACD;;AAEDC,EAAAA,2BAA2B,CAACL,QAAD,EAAW;AACpCC,IAAAA,cAAc,CAACC,OAAf,CAAuB,mBAAvB,EAA4CF,QAA5C;AACAC,IAAAA,cAAc,CAACC,OAAf,CAAuB,MAAvB,EAA+B,MAA/B;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACD;;AAEDE,EAAAA,MAAM,GAAG;AACPC,IAAAA,YAAY,CAACC,KAAb;AACAP,IAAAA,cAAc,CAACO,KAAf;AACAC,IAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB,CAAuB,KAAvB;AACD;;AAEDC,EAAAA,cAAc,GAAG;AACf,QAAIC,IAAI,GAAGZ,cAAc,CAACa,OAAf,CAAuB,MAAvB,CAAX;;AACA,QAAID,IAAI,KAAK,MAAb,EAAqB;AACnB,aAAO,KAAP;AACD,KAFD,MAEO;AACL,aAAO,IAAP;AACD;AACF;;AAEDE,EAAAA,kBAAkB,GAAG;AACnB,QAAIF,IAAI,GAAGZ,cAAc,CAACa,OAAf,CAAuB,MAAvB,CAAX;;AACA,QAAID,IAAI,KAAK,UAAb,EAAyB;AACvB,aAAO,KAAP;AACD,KAFD,MAEO;AACL,aAAO,IAAP;AACD;AACF;;AAEDG,EAAAA,eAAe,GAAG;AAChB,QAAIhB,QAAQ,GAAGC,cAAc,CAACa,OAAf,CAAuB,mBAAvB,CAAf;;AACA,QAAId,QAAQ,IAAI,IAAhB,EAAsB;AACpB,aAAO,EAAP;AACD,KAFD,MAEO;AACL,aAAOA,QAAP;AACD;AACF;;AAEDiB,EAAAA,UAAU,CAACC,QAAD,EAAW;AACnBX,IAAAA,YAAY,CAACL,OAAb,CAAqB,OAArB,EAA8BgB,QAA9B;AACD;;AAhDyB;;AAmD5B,eAAe,IAAIpB,qBAAJ,EAAf","sourcesContent":["class AuthenticationService {\n  registerSuccessfulLoginBusiness(username) {\n    sessionStorage.setItem(\"authenticatedUser\", username);\n    sessionStorage.setItem(\"role\", \"business\");\n    console.log(\"Successful login\");\n  }\n\n  registerSuccessfulLoginUser(username) {\n    sessionStorage.setItem(\"authenticatedUser\", username);\n    sessionStorage.setItem(\"role\", \"user\");\n    console.log(\"Successful login\");\n  }\n\n  logout() {\n    localStorage.clear();\n    sessionStorage.clear();\n    window.location.reload(false);\n  }\n\n  isUserLoggedIn() {\n    let role = sessionStorage.getItem(\"role\");\n    if (role !== \"user\") {\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  isBusinessLoggedIn() {\n    let role = sessionStorage.getItem(\"role\");\n    if (role !== \"business\") {\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  getLoggedInUser() {\n    let username = sessionStorage.getItem(\"authenticatedUser\");\n    if (username == null) {\n      return \"\";\n    } else {\n      return username;\n    }\n  }\n\n  setUpToken(jwtToken) {\n    localStorage.setItem(\"token\", jwtToken);\n  }\n}\n\nexport default new AuthenticationService();\n"]},"metadata":{},"sourceType":"module"}